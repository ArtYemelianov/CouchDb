apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'me.tatarka.retrolambda'


android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "leveleight.artus.com.myapplication"
        minSdkVersion 18
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
    }

    def amount = getAndIncreamentAmount();
    buildTypes {
        debug {
            buildConfigField "int", "AMOUNT_BUILD", amount.toString()
        }

        release {
            buildConfigField "int", "AMOUNT_BUILD", amount.toString()
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:25.1.0'

    compile 'com.google.guava:guava:16.0.1'

    apt "org.androidannotations:androidannotations:4.1.0"
    compile 'org.androidannotations:androidannotations-api:4.1.0'

    compile 'com.couchbase.lite:couchbase-lite-android:1.3.1'
}


def getAndIncreamentAmount(){
    def versionPropsFile = file('count.properties')
    int amount = 0
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        amount = versionProps['AMOUNT_BUILD'].toInteger() + 1

        // store values
        versionProps['AMOUNT_BUILD'] = amount.toString()
        versionProps.store(versionPropsFile.newWriter(), null)


    } else {
        throw new GradleException("Could not read version.properties!")
    }
    return amount;
}
